def registry = 'https://prafulcloud.jfrog.io'

pipeline {
    agent {
        node {
            label "java-slave"
        }
    }
    environment {
        PATH = "/usr/share/maven/bin/mvn:$PATH"
    }
    
    stages {
        stage('Build') {
            steps {
                echo "------------ Build Started -----------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "------------ Build Completed -----------"
            }
        }

        stage('Unit Test') {
            steps {
                echo "---------- Unit Testing Started --------"
                sh 'mvn surefire-report:report'
                echo "---------- Unit Testing Stopped --------"
            }
        }

        stage('Sonar Analysis') {
            environment {
                scannerHome = tool 'sonarqube-server'
            }
            steps {
                script {
                    echo "------------ Sonar Analysis Started -----------"
                    withSonarQubeEnv('sonarqube-server') {
                        sh "${scannerHome}/bin/sonar-scanner -X -Dsonar.projectKey=prafulpatel16_twittertrend -Dsonar.organization=prafulpatel16"
                    }
                    echo "------------ Sonar Analysis Completed -----------"
                }
            }
        }

        stage('Quality Gate Check') {
            steps {
                script {
                    echo '<--------Sonar Gate Analysis Started ----------------->'
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "SonarQube quality gate check failed: ${qg.status}"
                    }
                    echo '<--------Sonar Gate Analysis Stopped ----------------->'
                }
            }
        }

        stage("jFrog-Jar Publish") {
            steps {
                script {
                    echo '<--------------- jFrog - Jar Publish Started --------------->'
                    def server = Artifactory.newServer url: registry + "/artifactory", credentialsId: "jfrog_access"
                    def properties = "buildid=${env.BUILD_ID},commitid=${GIT_COMMIT}"
                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "jarstaging/(*)",
                                "target": "devops-libs-release-local/{1}",
                                "flat": "false",
                                "props": "${properties}",
                                "exclusions": ["*.sha1", "*.md5"]
                            }
                        ]
                    }"""
                    def buildInfo = server.upload(uploadSpec)
                    buildInfo.env.collect()
                    server.publishBuildInfo(buildInfo)
                    echo '<--------------- jFrog - Jar Publish Ended --------------->'
                }
            }
        }
    }
}